#include <ESP8266WiFi.h>

long address = 0;   //later on for our own IP address
const char* ssid     = "FabLab2";   //wifi details
const char* password = "FabLabKaL!";
long Value1=0;        //variables needed for the data
long Value2=0;
long CPM=0;
String apiKey = "UX3BY43T1Y9DQYH9"; //api write key
float SV = 0;
float SVY = 0;


#define server "184.106.153.149" // Thingspeak server address (don't use 'api.thingspeak.com' - it doesn't work)
#define port 80 // Thingspeak port

WiFiClient client;

void setup() {
  Serial.begin(9600);  // check both arduino and esp8266 have same baud rate 
  delay(1);
 
//We start by connecting to a WiFi network
 // Serial.println();
  //Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  address = WiFi.localIP();
  Serial.println("");
  Serial.println("WiFi connected");  
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}
 
void loop(){
//write code to establish connection with arduino
  if (Serial.available()){ 
    Serial.println("getting data...");
    Value1= Serial.parseInt();
    Value2= Serial.parseInt();
  
  CPM = ( Value2*256 ) + Value1;
  SV = CPM*0.0057;
  SVY = SV*8.766;
//send cpm to serial monitor
Serial.println("value1,value2");
Serial.println(Value1);
Serial.println(Value2);
Serial.println("CPM value is");
Serial.println(CPM);
//send data to website
  if (client.connect(server,80)) { // "184.106.153.149" or api.thingspeak.com
    String postStr = apiKey;
    postStr +="&field1=";
    postStr += String(CPM);
    postStr +="&field3=";
    postStr += String(SV); 
    postStr +="&field4=";
    postStr += String(SVY); 
    postStr += "\r\n\r\n";

    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);

    Serial.println("CPM sent to thingspeak");
  }
  client.stop();  //close connection with website
}
  Value1=0; //reset values
  Value2=0;
  CPM=0;
  Serial.println("Waiting...");
  delay(5000); //maybe reduce delay to 10 seconds if i put the loop in standby while waiting for communication in any case (will fill up alone the gap of time)
}
 
 
//WHAT TO DO:
//1- Be sure it connects to wifi (maybe make new function to connect, to be called if the connection is lost
//2- be sure to check how to open the transmission of data to thingspeak
//3- open serial connection, which would be communication with arduino
//4- if transmission happening, read byte 1 and 2, and then get back the value of the cpm
//5- check the limit in transmission via wifi
